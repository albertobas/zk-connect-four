{
  "address": "0xb90bdb43Fb81Fe38d842bD8841F2E143fBBe106C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "plonkVerifier_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "ProofVerification",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "proof",
          "type": "bytes"
        },
        {
          "internalType": "uint256[]",
          "name": "pubSignals",
          "type": "uint256[]"
        }
      ],
      "name": "verifyProof",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xaca92c88eaa847412b6070f3d789a1a6c6e54cddd3fe49005159352d1e57d6ae",
  "receipt": {
    "to": null,
    "from": "0x37A8b628888c272f6Fb9bE8F1a8eb8e454E0dA1C",
    "contractAddress": "0xb90bdb43Fb81Fe38d842bD8841F2E143fBBe106C",
    "transactionIndex": 12,
    "gasUsed": "421990",
    "logsBloom": "0x
    "blockHash": "0x0c8d8e6e5768dba3525ada30d29e1fc15023caca3d6b02c0c878ed13fe6003e0",
    "transactionHash": "0xaca92c88eaa847412b6070f3d789a1a6c6e54cddd3fe49005159352d1e57d6ae",
    "logs": [],
    "blockNumber": 4586894,
    "cumulativeGasUsed": "2473325",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2d3Fc1B4769F6DDd4aBfe1A239e4504c12c4f364"
  ],
  "numDeployments": 1,
  "solcInputHash": "cc195a66cee8435568fb98c5880aac9d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"plonkVerifier_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"ProofVerification\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"pubSignals\",\"type\":\"uint256[]\"}],\"name\":\"verifyProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract that uses a PLONK verifier in order to verify zero-knowledge proofs on the game of     Connect Four and emit events with the result of the verifications.\",\"events\":{\"ProofVerification(bool)\":{\"details\":\"Emitted when a proof is verified\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract by setting an address to the PLONK verifier.\",\"params\":{\"plonkVerifier_\":\"address of the verifier\"}},\"verifyProof(bytes,uint256[])\":{\"details\":\"Verifies the validity of the proof `proof`.     Emits the event ProofVerification.\",\"params\":{\"proof\":\"the proof to be verified.\",\"pubSignals\":\"public signals.\"}}},\"stateVariables\":{\"_plonkVerifier\":{\"details\":\"Address of the PLONK verifier\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ZKConnectFour.sol\":\"ZKConnectFour\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/ZKConnectFour.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.17;\\n\\n/// @dev Interface of the PLONK verifier\\ninterface IPlonkVerifier {\\n    function verifyProof(bytes memory proof, uint[] memory pubSignals) external view returns (bool);\\n}\\n\\n/**\\n * @dev Contract that uses a PLONK verifier in order to verify zero-knowledge proofs on the game of\\n *     Connect Four and emit events with the result of the verifications.\\n */\\ncontract ZKConnectFour {\\n    /// @dev Address of the PLONK verifier\\n    address _plonkVerifier;\\n\\n    /// @dev Emitted when a proof is verified\\n    event ProofVerification(bool result);\\n\\n    /**\\n     * @dev Initializes the contract by setting an address to the PLONK verifier.\\n     *\\n     * @param plonkVerifier_  address of the verifier\\n     */\\n    constructor(address plonkVerifier_) {\\n        _plonkVerifier = plonkVerifier_;\\n    }\\n\\n    /**\\n     * @dev Verifies the validity of the proof `proof`.\\n     *     Emits the event ProofVerification.\\n     *\\n     * @param proof the proof to be verified.\\n     * @param pubSignals public signals.\\n     */\\n    function verifyProof(bytes memory proof, uint[] memory pubSignals) public {\\n        bool result = IPlonkVerifier(_plonkVerifier).verifyProof(proof, pubSignals);\\n        emit ProofVerification(result);\\n    }\\n}\\n\",\"keccak256\":\"0xe61d292fe695f36bc15aa51ab94c70d6c3186132bdeba0d150d52a667ae874b6\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610749380380610749833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610632806101176000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631e8e1e1314610030575b600080fd5b61004a60048036038101906100459190610381565b61004c565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631e8e1e1384846040518363ffffffff1660e01b81526004016100aa929190610536565b602060405180830381865afa1580156100c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100eb91906105a5565b90507f227f6190073ec97cb8fabdc4a7b246017b82789a212ebc5a1ec4ddf1e2d379908160405161011c91906105e1565b60405180910390a1505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61019082610147565b810181811067ffffffffffffffff821117156101af576101ae610158565b5b80604052505050565b60006101c2610129565b90506101ce8282610187565b919050565b600067ffffffffffffffff8211156101ee576101ed610158565b5b6101f782610147565b9050602081019050919050565b82818337600083830152505050565b6000610226610221846101d3565b6101b8565b90508281526020810184848401111561024257610241610142565b5b61024d848285610204565b509392505050565b600082601f83011261026a5761026961013d565b5b813561027a848260208601610213565b91505092915050565b600067ffffffffffffffff82111561029e5761029d610158565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6102c7816102b4565b81146102d257600080fd5b50565b6000813590506102e4816102be565b92915050565b60006102fd6102f884610283565b6101b8565b905080838252602082019050602084028301858111156103205761031f6102af565b5b835b81811015610349578061033588826102d5565b845260208401935050602081019050610322565b5050509392505050565b600082601f8301126103685761036761013d565b5b81356103788482602086016102ea565b91505092915050565b6000806040838503121561039857610397610133565b5b600083013567ffffffffffffffff8111156103b6576103b5610138565b5b6103c285828601610255565b925050602083013567ffffffffffffffff8111156103e3576103e2610138565b5b6103ef85828601610353565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610433578082015181840152602081019050610418565b60008484015250505050565b600061044a826103f9565b6104548185610404565b9350610464818560208601610415565b61046d81610147565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6104ad816102b4565b82525050565b60006104bf83836104a4565b60208301905092915050565b6000602082019050919050565b60006104e382610478565b6104ed8185610483565b93506104f883610494565b8060005b8381101561052957815161051088826104b3565b975061051b836104cb565b9250506001810190506104fc565b5085935050505092915050565b60006040820190508181036000830152610550818561043f565b9050818103602083015261056481846104d8565b90509392505050565b60008115159050919050565b6105828161056d565b811461058d57600080fd5b50565b60008151905061059f81610579565b92915050565b6000602082840312156105bb576105ba610133565b5b60006105c984828501610590565b91505092915050565b6105db8161056d565b82525050565b60006020820190506105f660008301846105d2565b9291505056fea2646970667358221220968d88da5a46cf1f26f09b619c3d2d75a6ce946d26b573c1ae5335bab3948a0664736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80631e8e1e1314610030575b600080fd5b61004a60048036038101906100459190610381565b61004c565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631e8e1e1384846040518363ffffffff1660e01b81526004016100aa929190610536565b602060405180830381865afa1580156100c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100eb91906105a5565b90507f227f6190073ec97cb8fabdc4a7b246017b82789a212ebc5a1ec4ddf1e2d379908160405161011c91906105e1565b60405180910390a1505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61019082610147565b810181811067ffffffffffffffff821117156101af576101ae610158565b5b80604052505050565b60006101c2610129565b90506101ce8282610187565b919050565b600067ffffffffffffffff8211156101ee576101ed610158565b5b6101f782610147565b9050602081019050919050565b82818337600083830152505050565b6000610226610221846101d3565b6101b8565b90508281526020810184848401111561024257610241610142565b5b61024d848285610204565b509392505050565b600082601f83011261026a5761026961013d565b5b813561027a848260208601610213565b91505092915050565b600067ffffffffffffffff82111561029e5761029d610158565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6102c7816102b4565b81146102d257600080fd5b50565b6000813590506102e4816102be565b92915050565b60006102fd6102f884610283565b6101b8565b905080838252602082019050602084028301858111156103205761031f6102af565b5b835b81811015610349578061033588826102d5565b845260208401935050602081019050610322565b5050509392505050565b600082601f8301126103685761036761013d565b5b81356103788482602086016102ea565b91505092915050565b6000806040838503121561039857610397610133565b5b600083013567ffffffffffffffff8111156103b6576103b5610138565b5b6103c285828601610255565b925050602083013567ffffffffffffffff8111156103e3576103e2610138565b5b6103ef85828601610353565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610433578082015181840152602081019050610418565b60008484015250505050565b600061044a826103f9565b6104548185610404565b9350610464818560208601610415565b61046d81610147565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6104ad816102b4565b82525050565b60006104bf83836104a4565b60208301905092915050565b6000602082019050919050565b60006104e382610478565b6104ed8185610483565b93506104f883610494565b8060005b8381101561052957815161051088826104b3565b975061051b836104cb565b9250506001810190506104fc565b5085935050505092915050565b60006040820190508181036000830152610550818561043f565b9050818103602083015261056481846104d8565b90509392505050565b60008115159050919050565b6105828161056d565b811461058d57600080fd5b50565b60008151905061059f81610579565b92915050565b6000602082840312156105bb576105ba610133565b5b60006105c984828501610590565b91505092915050565b6105db8161056d565b82525050565b60006020820190506105f660008301846105d2565b9291505056fea2646970667358221220968d88da5a46cf1f26f09b619c3d2d75a6ce946d26b573c1ae5335bab3948a0664736f6c63430008110033",
  "devdoc": {
    "details": "Contract that uses a PLONK verifier in order to verify zero-knowledge proofs on the game of     Connect Four and emit events with the result of the verifications.",
    "events": {
      "ProofVerification(bool)": {
        "details": "Emitted when a proof is verified"
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the contract by setting an address to the PLONK verifier.",
        "params": {
          "plonkVerifier_": "address of the verifier"
        }
      },
      "verifyProof(bytes,uint256[])": {
        "details": "Verifies the validity of the proof `proof`.     Emits the event ProofVerification.",
        "params": {
          "proof": "the proof to be verified.",
          "pubSignals": "public signals."
        }
      }
    },
    "stateVariables": {
      "_plonkVerifier": {
        "details": "Address of the PLONK verifier"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 245,
        "contract": "src/ZKConnectFour.sol:ZKConnectFour",
        "label": "_plonkVerifier",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}